{"ast":null,"code":"import axios from \"axios\";\nclass UserService {\n  static async login(email, password) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {\n        email,\n        password\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async register(userData, token) {\n    try {\n      const response = await axios.post(`${UserService.BASE_URL}/auth/register`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getAllUsers(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getYourProfile(token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async getUserById(userId, token) {\n    try {\n      const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async deleteUser(userId, token) {\n    try {\n      const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n  static async updateUser(userId, userData, token) {\n    try {\n      const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (err) {\n      throw err;\n    }\n  }\n\n  /**AUTHENTICATION CHECKER */\n  static logout() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('role');\n  }\n  static isAuthenticated() {\n    const token = localStorage.getItem('token');\n    return !!token;\n  }\n  static isAdmin() {\n    const role = localStorage.getItem('role');\n    return role === 'ADMIN';\n  }\n  static isUser() {\n    const role = localStorage.getItem('role');\n    return role === 'USER';\n  }\n  static adminOnly() {\n    return this.isAuthenticated() && this.isAdmin();\n  }\n}\nUserService.BASE_URL = \"http://localhost:1010\";\nexport default UserService;","map":{"version":3,"names":["axios","UserService","login","email","password","response","post","BASE_URL","data","err","register","userData","token","headers","Authorization","getAllUsers","get","getYourProfile","getUserById","userId","deleteUser","delete","updateUser","put","logout","localStorage","removeItem","isAuthenticated","getItem","isAdmin","role","isUser","adminOnly"],"sources":["D:/git_pull/users-management-system-java-react/frontend/src/components/service/UserService.js"],"sourcesContent":["import axios from \"axios\";\n\nclass UserService{\n    static BASE_URL = \"http://localhost:1010\"\n\n    static async login(email, password){\n        try{\n            const response = await axios.post(`${UserService.BASE_URL}/auth/login`, {email, password})\n            return response.data;\n\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async register(userData, token){\n        try{\n            const response = await axios.post(`${UserService.BASE_URL}/auth/register`, userData, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async getAllUsers(token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-all-users`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n\n    static async getYourProfile(token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/adminuser/get-profile`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async getUserById(userId, token){\n        try{\n            const response = await axios.get(`${UserService.BASE_URL}/admin/get-users/${userId}`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    static async deleteUser(userId, token){\n        try{\n            const response = await axios.delete(`${UserService.BASE_URL}/admin/delete/${userId}`, \n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n\n    static async updateUser(userId, userData, token){\n        try{\n            const response = await axios.put(`${UserService.BASE_URL}/admin/update/${userId}`, userData,\n            {\n                headers: {Authorization: `Bearer ${token}`}\n            })\n            return response.data;\n        }catch(err){\n            throw err;\n        }\n    }\n\n    /**AUTHENTICATION CHECKER */\n    static logout(){\n        localStorage.removeItem('token')\n        localStorage.removeItem('role')\n    }\n\n    static isAuthenticated(){\n        const token = localStorage.getItem('token')\n        return !!token\n    }\n\n    static isAdmin(){\n        const role = localStorage.getItem('role')\n        return role === 'ADMIN'\n    }\n\n    static isUser(){\n        const role = localStorage.getItem('role')\n        return role === 'USER'\n    }\n\n    static adminOnly(){\n        return this.isAuthenticated() && this.isAdmin();\n    }\n\n}\n\nexport default UserService;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}